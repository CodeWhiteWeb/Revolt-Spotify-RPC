// This file was auto-generated by @insertish/oapi!
import { components } from './schema';
export type RevoltConfig = components['schemas']['RevoltConfig'];
export type RevoltFeatures = components['schemas']['RevoltFeatures'];
export type CaptchaFeature = components['schemas']['CaptchaFeature'];
export type Feature = components['schemas']['Feature'];
export type VoiceFeature = components['schemas']['VoiceFeature'];
export type Permission = components['schemas']['Permission'];
export type UserPermission = components['schemas']['UserPermission'];
export type Error = components['schemas']['Error'];
export type User = components['schemas']['User'];
export type File = components['schemas']['File'];
export type Metadata = components['schemas']['Metadata'];
export type Relationship = components['schemas']['Relationship'];
export type RelationshipStatus = components['schemas']['RelationshipStatus'];
export type UserStatus = components['schemas']['UserStatus'];
export type Presence = components['schemas']['Presence'];
export type UserProfile = components['schemas']['UserProfile'];
export type BotInformation = components['schemas']['BotInformation'];
export type Id = components['schemas']['Id'];
export type DataEditUser = components['schemas']['DataEditUser'];
export type UserProfileData = components['schemas']['UserProfileData'];
export type FieldsUser = components['schemas']['FieldsUser'];
export type DataChangeUsername = components['schemas']['DataChangeUsername'];
export type Channel = components['schemas']['Channel'];
export type OverrideField = components['schemas']['OverrideField'];
export type MutualResponse = components['schemas']['MutualResponse'];
export type DataSendFriendRequest = components['schemas']['DataSendFriendRequest'];
export type Bot = components['schemas']['Bot'];
export type DataCreateBot = components['schemas']['DataCreateBot'];
export type InviteBotDestination = components['schemas']['InviteBotDestination'];
export type PublicBot = components['schemas']['PublicBot'];
export type BotResponse = components['schemas']['BotResponse'];
export type OwnedBotsResponse = components['schemas']['OwnedBotsResponse'];
export type DataEditBot = components['schemas']['DataEditBot'];
export type FieldsBot = components['schemas']['FieldsBot'];
export type DataEditChannel = components['schemas']['DataEditChannel'];
export type FieldsChannel = components['schemas']['FieldsChannel'];
export type Invite = components['schemas']['Invite'];
export type Message = components['schemas']['Message'];
export type SystemMessage = components['schemas']['SystemMessage'];
export type ISO8601_Timestamp = components['schemas']['ISO8601 Timestamp'];
export type Embed = components['schemas']['Embed'];
export type Special = components['schemas']['Special'];
export type LightspeedType = components['schemas']['LightspeedType'];
export type TwitchType = components['schemas']['TwitchType'];
export type BandcampType = components['schemas']['BandcampType'];
export type Image = components['schemas']['Image'];
export type ImageSize = components['schemas']['ImageSize'];
export type Video = components['schemas']['Video'];
export type Interactions = components['schemas']['Interactions'];
export type Masquerade = components['schemas']['Masquerade'];
export type DataMessageSend = components['schemas']['DataMessageSend'];
export type Reply = components['schemas']['Reply'];
export type SendableEmbed = components['schemas']['SendableEmbed'];
export type BulkMessageResponse = components['schemas']['BulkMessageResponse'];
export type Member = components['schemas']['Member'];
export type MemberCompositeKey = components['schemas']['MemberCompositeKey'];
export type MessageSort = components['schemas']['MessageSort'];
export type OptionsMessageSearch = components['schemas']['OptionsMessageSearch'];
export type OptionsQueryStale = components['schemas']['OptionsQueryStale'];
export type DataEditMessage = components['schemas']['DataEditMessage'];
export type OptionsBulkDelete = components['schemas']['OptionsBulkDelete'];
export type DataCreateGroup = components['schemas']['DataCreateGroup'];
export type CreateVoiceUserResponse = components['schemas']['CreateVoiceUserResponse'];
export type Data = components['schemas']['Data'];
export type Override = components['schemas']['Override'];
export type DataDefaultChannelPermissions = components['schemas']['DataDefaultChannelPermissions'];
export type CreateServerResponse = components['schemas']['CreateServerResponse'];
export type Server = components['schemas']['Server'];
export type Category = components['schemas']['Category'];
export type SystemMessageChannels = components['schemas']['SystemMessageChannels'];
export type Role = components['schemas']['Role'];
export type DataCreateServer = components['schemas']['DataCreateServer'];
export type DataEditServer = components['schemas']['DataEditServer'];
export type FieldsServer = components['schemas']['FieldsServer'];
export type DataCreateChannel = components['schemas']['DataCreateChannel'];
export type ChannelType = components['schemas']['ChannelType'];
export type AllMemberResponse = components['schemas']['AllMemberResponse'];
export type DataMemberEdit = components['schemas']['DataMemberEdit'];
export type FieldsMember = components['schemas']['FieldsMember'];
export type ServerBan = components['schemas']['ServerBan'];
export type DataBanCreate = components['schemas']['DataBanCreate'];
export type BanListResult = components['schemas']['BanListResult'];
export type BannedUser = components['schemas']['BannedUser'];
export type NewRoleResponse = components['schemas']['NewRoleResponse'];
export type DataCreateRole = components['schemas']['DataCreateRole'];
export type DataEditRole = components['schemas']['DataEditRole'];
export type FieldsRole = components['schemas']['FieldsRole'];
export type DataSetServerRolePermission = components['schemas']['DataSetServerRolePermission'];
export type DataSetServerDefaultPermission = components['schemas']['DataSetServerDefaultPermission'];
export type Emoji = components['schemas']['Emoji'];
export type EmojiParent = components['schemas']['EmojiParent'];
export type InviteResponse = components['schemas']['InviteResponse'];
export type InviteJoinResponse = components['schemas']['InviteJoinResponse'];
export type DataCreateEmoji = components['schemas']['DataCreateEmoji'];
export type RAuth_Error = components['schemas']['RAuth Error'];
export type DataCreateAccount = components['schemas']['DataCreateAccount'];
export type DataResendVerification = components['schemas']['DataResendVerification'];
export type DataAccountDeletion = components['schemas']['DataAccountDeletion'];
export type AccountInfo = components['schemas']['AccountInfo'];
export type DataChangePassword = components['schemas']['DataChangePassword'];
export type DataChangeEmail = components['schemas']['DataChangeEmail'];
export type ResponseVerify = components['schemas']['ResponseVerify'];
export type MFATicket = components['schemas']['MFATicket'];
export type DataPasswordReset = components['schemas']['DataPasswordReset'];
export type DataSendPasswordReset = components['schemas']['DataSendPasswordReset'];
export type ResponseLogin = components['schemas']['ResponseLogin'];
export type WebPushSubscription = components['schemas']['WebPushSubscription'];
export type MFAMethod = components['schemas']['MFAMethod'];
export type DataLogin = components['schemas']['DataLogin'];
export type MFAResponse = components['schemas']['MFAResponse'];
export type SessionInfo = components['schemas']['SessionInfo'];
export type DataEditSession = components['schemas']['DataEditSession'];
export type MultiFactorStatus = components['schemas']['MultiFactorStatus'];
export type ResponseTotpSecret = components['schemas']['ResponseTotpSecret'];
export type DataHello = components['schemas']['DataHello'];
export type DataOnboard = components['schemas']['DataOnboard'];
export type OptionsFetchSettings = components['schemas']['OptionsFetchSettings'];
export type ChannelUnread = components['schemas']['ChannelUnread'];
export type ChannelCompositeKey = components['schemas']['ChannelCompositeKey'];;