import { components } from './schema';
export declare type RevoltConfig = components['schemas']['RevoltConfig'];
export declare type RevoltFeatures = components['schemas']['RevoltFeatures'];
export declare type CaptchaFeature = components['schemas']['CaptchaFeature'];
export declare type Feature = components['schemas']['Feature'];
export declare type VoiceFeature = components['schemas']['VoiceFeature'];
export declare type Permission = components['schemas']['Permission'];
export declare type UserPermission = components['schemas']['UserPermission'];
export declare type Error = components['schemas']['Error'];
export declare type User = components['schemas']['User'];
export declare type File = components['schemas']['File'];
export declare type Metadata = components['schemas']['Metadata'];
export declare type Relationship = components['schemas']['Relationship'];
export declare type RelationshipStatus = components['schemas']['RelationshipStatus'];
export declare type UserStatus = components['schemas']['UserStatus'];
export declare type Presence = components['schemas']['Presence'];
export declare type UserProfile = components['schemas']['UserProfile'];
export declare type BotInformation = components['schemas']['BotInformation'];
export declare type Id = components['schemas']['Id'];
export declare type DataEditUser = components['schemas']['DataEditUser'];
export declare type UserProfileData = components['schemas']['UserProfileData'];
export declare type FieldsUser = components['schemas']['FieldsUser'];
export declare type DataChangeUsername = components['schemas']['DataChangeUsername'];
export declare type Channel = components['schemas']['Channel'];
export declare type OverrideField = components['schemas']['OverrideField'];
export declare type MutualResponse = components['schemas']['MutualResponse'];
export declare type DataSendFriendRequest = components['schemas']['DataSendFriendRequest'];
export declare type Bot = components['schemas']['Bot'];
export declare type DataCreateBot = components['schemas']['DataCreateBot'];
export declare type InviteBotDestination = components['schemas']['InviteBotDestination'];
export declare type PublicBot = components['schemas']['PublicBot'];
export declare type BotResponse = components['schemas']['BotResponse'];
export declare type OwnedBotsResponse = components['schemas']['OwnedBotsResponse'];
export declare type DataEditBot = components['schemas']['DataEditBot'];
export declare type FieldsBot = components['schemas']['FieldsBot'];
export declare type DataEditChannel = components['schemas']['DataEditChannel'];
export declare type FieldsChannel = components['schemas']['FieldsChannel'];
export declare type Invite = components['schemas']['Invite'];
export declare type Message = components['schemas']['Message'];
export declare type SystemMessage = components['schemas']['SystemMessage'];
export declare type ISO8601_Timestamp = components['schemas']['ISO8601 Timestamp'];
export declare type Embed = components['schemas']['Embed'];
export declare type Special = components['schemas']['Special'];
export declare type LightspeedType = components['schemas']['LightspeedType'];
export declare type TwitchType = components['schemas']['TwitchType'];
export declare type BandcampType = components['schemas']['BandcampType'];
export declare type Image = components['schemas']['Image'];
export declare type ImageSize = components['schemas']['ImageSize'];
export declare type Video = components['schemas']['Video'];
export declare type Interactions = components['schemas']['Interactions'];
export declare type Masquerade = components['schemas']['Masquerade'];
export declare type DataMessageSend = components['schemas']['DataMessageSend'];
export declare type Reply = components['schemas']['Reply'];
export declare type SendableEmbed = components['schemas']['SendableEmbed'];
export declare type BulkMessageResponse = components['schemas']['BulkMessageResponse'];
export declare type Member = components['schemas']['Member'];
export declare type MemberCompositeKey = components['schemas']['MemberCompositeKey'];
export declare type MessageSort = components['schemas']['MessageSort'];
export declare type OptionsMessageSearch = components['schemas']['OptionsMessageSearch'];
export declare type OptionsQueryStale = components['schemas']['OptionsQueryStale'];
export declare type DataEditMessage = components['schemas']['DataEditMessage'];
export declare type OptionsBulkDelete = components['schemas']['OptionsBulkDelete'];
export declare type DataCreateGroup = components['schemas']['DataCreateGroup'];
export declare type CreateVoiceUserResponse = components['schemas']['CreateVoiceUserResponse'];
export declare type Data = components['schemas']['Data'];
export declare type Override = components['schemas']['Override'];
export declare type DataDefaultChannelPermissions = components['schemas']['DataDefaultChannelPermissions'];
export declare type CreateServerResponse = components['schemas']['CreateServerResponse'];
export declare type Server = components['schemas']['Server'];
export declare type Category = components['schemas']['Category'];
export declare type SystemMessageChannels = components['schemas']['SystemMessageChannels'];
export declare type Role = components['schemas']['Role'];
export declare type DataCreateServer = components['schemas']['DataCreateServer'];
export declare type DataEditServer = components['schemas']['DataEditServer'];
export declare type FieldsServer = components['schemas']['FieldsServer'];
export declare type DataCreateChannel = components['schemas']['DataCreateChannel'];
export declare type ChannelType = components['schemas']['ChannelType'];
export declare type AllMemberResponse = components['schemas']['AllMemberResponse'];
export declare type DataMemberEdit = components['schemas']['DataMemberEdit'];
export declare type FieldsMember = components['schemas']['FieldsMember'];
export declare type ServerBan = components['schemas']['ServerBan'];
export declare type DataBanCreate = components['schemas']['DataBanCreate'];
export declare type BanListResult = components['schemas']['BanListResult'];
export declare type BannedUser = components['schemas']['BannedUser'];
export declare type NewRoleResponse = components['schemas']['NewRoleResponse'];
export declare type DataCreateRole = components['schemas']['DataCreateRole'];
export declare type DataEditRole = components['schemas']['DataEditRole'];
export declare type FieldsRole = components['schemas']['FieldsRole'];
export declare type DataSetServerRolePermission = components['schemas']['DataSetServerRolePermission'];
export declare type DataSetServerDefaultPermission = components['schemas']['DataSetServerDefaultPermission'];
export declare type Emoji = components['schemas']['Emoji'];
export declare type EmojiParent = components['schemas']['EmojiParent'];
export declare type InviteResponse = components['schemas']['InviteResponse'];
export declare type InviteJoinResponse = components['schemas']['InviteJoinResponse'];
export declare type DataCreateEmoji = components['schemas']['DataCreateEmoji'];
export declare type RAuth_Error = components['schemas']['RAuth Error'];
export declare type DataCreateAccount = components['schemas']['DataCreateAccount'];
export declare type DataResendVerification = components['schemas']['DataResendVerification'];
export declare type DataAccountDeletion = components['schemas']['DataAccountDeletion'];
export declare type AccountInfo = components['schemas']['AccountInfo'];
export declare type DataChangePassword = components['schemas']['DataChangePassword'];
export declare type DataChangeEmail = components['schemas']['DataChangeEmail'];
export declare type ResponseVerify = components['schemas']['ResponseVerify'];
export declare type MFATicket = components['schemas']['MFATicket'];
export declare type DataPasswordReset = components['schemas']['DataPasswordReset'];
export declare type DataSendPasswordReset = components['schemas']['DataSendPasswordReset'];
export declare type ResponseLogin = components['schemas']['ResponseLogin'];
export declare type WebPushSubscription = components['schemas']['WebPushSubscription'];
export declare type MFAMethod = components['schemas']['MFAMethod'];
export declare type DataLogin = components['schemas']['DataLogin'];
export declare type MFAResponse = components['schemas']['MFAResponse'];
export declare type SessionInfo = components['schemas']['SessionInfo'];
export declare type DataEditSession = components['schemas']['DataEditSession'];
export declare type MultiFactorStatus = components['schemas']['MultiFactorStatus'];
export declare type ResponseTotpSecret = components['schemas']['ResponseTotpSecret'];
export declare type DataHello = components['schemas']['DataHello'];
export declare type DataOnboard = components['schemas']['DataOnboard'];
export declare type OptionsFetchSettings = components['schemas']['OptionsFetchSettings'];
export declare type ChannelUnread = components['schemas']['ChannelUnread'];
export declare type ChannelCompositeKey = components['schemas']['ChannelCompositeKey'];
