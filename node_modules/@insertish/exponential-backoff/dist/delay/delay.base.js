"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Delay = void 0;
const jitter_factory_1 = require("../jitter/jitter.factory");
class Delay {
    constructor(options) {
        this.options = options;
        this.attempt = 0;
    }
    apply() {
        return new Promise(resolve => setTimeout(resolve, this.jitteredDelay));
    }
    setAttemptNumber(attempt) {
        this.attempt = attempt;
    }
    get jitteredDelay() {
        const jitter = jitter_factory_1.JitterFactory(this.options);
        return jitter(this.delay);
    }
    get delay() {
        const constant = this.options.startingDelay;
        const base = this.options.timeMultiple;
        const power = this.numOfDelayedAttempts;
        const delay = constant * Math.pow(base, power);
        return Math.min(delay, this.options.maxDelay);
    }
    get numOfDelayedAttempts() {
        return this.attempt;
    }
}
exports.Delay = Delay;
